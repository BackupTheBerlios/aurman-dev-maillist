From djszapi at archlinux.us  Tue Oct 13 07:55:25 2009
From: djszapi at archlinux.us (Laszlo Papp)
Date: Tue, 13 Oct 2009 07:55:25 +0200
Subject: [Aurman-dev] New list test
Message-ID: <a362e8010910122255n5f65edd6w68a45ee056846778@mail.gmail.com>

test
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/aurman-dev/attachments/20091013/a3e0ccbc/attachment.html>

From dante4d at gmail.com  Wed Oct 14 13:04:26 2009
From: dante4d at gmail.com (=?UTF-8?q?David=20H=C3=A1jek?=)
Date: Wed, 14 Oct 2009 13:04:26 +0200
Subject: [Aurman-dev] [PATCH] Draft implementation of --maintainer option
Message-ID: <1255518266-8068-1-git-send-email-dante4d@gmail.com>

I quickly added new code to make the option work. More of a proof of
concept than nice code. I want to address a few issues left and make
it nice when doscussed:
1.	option parsing could use funtion poiter approach
2.	from am_maintainer_exec_function, generic "aur query function"
	could be extracted and reused in other places and corresponding
	code refactored to be nice
3.	parsing of json output can also be made little more generic

Signed-off-by: David H?jek <dante4d at gmail.com>
---
 src/aurman/aurman.c |  131 +++++++++++++++++++++++++++++++++++++++++++++++++++
 src/aurman/conf.h   |    5 ++-
 2 files changed, 135 insertions(+), 1 deletions(-)

diff --git a/src/aurman/aurman.c b/src/aurman/aurman.c
index 59a1c4f..b1c1d84 100755
--- a/src/aurman/aurman.c
+++ b/src/aurman/aurman.c
@@ -1284,6 +1284,8 @@ static int parseargs(int argc, char *argv[])
 		{"asexplicit",     		no_argument,   0, AM_LONG_OP_ASEXPLICIT},
 		{"arch",       			required_argument, 0, AM_LONG_OP_ARCH},
 		/* {"source",  			no_argument, 		0, AM_LONG_OP_SOURCE}, */
+		{"maintainer",       	required_argument, 0, AM_LONG_OP_MAINTAINER},
+		
 		{0, 0, 0, 0}
 	};
 
@@ -1433,6 +1435,9 @@ static int parseargs(int argc, char *argv[])
 			case AM_LONG_OP_LISTCAT:
 				list_cat();
 				break;
+			case AM_LONG_OP_MAINTAINER:
+				config->maintainer = strndup(optarg, 64); // AUR username seems to be 64 chars long 
+				break;   
 			case '?':
 				return(1);
 			default:
@@ -1450,6 +1455,127 @@ static int parseargs(int argc, char *argv[])
     return(1);
 }
 
+// data from json query - this should be refactored later
+char *aur_json_data = NULL;
+size_t old_len = 0;
+/**
+ * @brief	cURL handler for exec_maintainer
+ *
+ * @param 	ptr		raw data to save
+ * @param	size	size of character
+ * @param	nmemb   number of characters 
+ * @param	stream
+ * @return	number of bytes actually taken care of - other than passed = error
+ *
+ * @todo refactor
+ */
+size_t am_curl_write_callback(void *ptr, size_t size, size_t nmemb, void *stream)
+{
+	//static size_t old_len = 0;
+	size_t cur_len = size * nmemb;
+	size_t new_len = old_len + cur_len;
+
+	//am_printf(AM_LOG_DEBUG, "old_len: %d\n", old_len);
+	//am_printf(AM_LOG_DEBUG, "cur_len: %d\n", cur_len);
+	//am_printf(AM_LOG_DEBUG, "new_len: %d\n", new_len);
+
+	aur_json_data = (char *)realloc(aur_json_data, new_len); // on first go, realloc is like malloc
+
+	//am_printf(AM_LOG_DEBUG, "aur_json_data: %p\n", aur_json_data);
+
+	memcpy(aur_json_data + old_len, ptr, cur_len);
+
+	old_len = new_len;
+
+	return cur_len; // no error
+}
+
+int am_perform_get(char *url, void **data, size_t *size)
+{
+	curl_easy_setopt(handle, CURLOPT_WRITEFUNCTION, am_curl_write_callback);
+    curl_easy_setopt(handle, CURLOPT_URL, url);
+    curl_easy_perform(handle);
+
+	*data = aur_json_data;
+	*size = old_len;
+	
+	return 0;
+}
+
+//typedef void (*pkg_info_handler_t)(pkg_info_t *info);
+
+void my_handler(pkg_info_t *info)
+{
+	printf("%s\n", info->name);
+}
+
+/**
+ * @brief	Execute `--maintainer' command.
+ *
+ * @param 	maintainer 	AUR username
+ * @return	0 success, others error
+ *
+ * @todo Interface could be refactored to generic handler typed
+ *   int (*exec_command)(char *)
+ * which would take argument string returned by getopt_long in optarg. That
+ * should work for all command, right?
+ */
+int am_exec_maintainer(char *maintainer)
+{
+	int ret = 0;
+	// quick & dirty way to get me where I need to be
+	char *aur = "http://aur.louipc.mine.nu/rpc.php";
+	//char *aur = "http://aur.archlinux.org/rpc.php";
+	int len;
+	char *url = NULL;
+	// am_perform_get output
+	void *data = NULL;
+	size_t size;
+	char *str = NULL;
+	//char *tail = NULL;
+
+	// check arg
+	if (maintainer == NULL) {
+		ret = -1; // @todo enum?
+		goto exit;
+	}
+
+	len = snprintf(NULL, 0, "%s?type=msearch&arg=%s", aur, maintainer) + 1; // url + \0
+	if (!(url = malloc(len * sizeof(char)))) {
+		ret = -2; // @todo enum? 
+		goto exit;
+	}
+	snprintf(url, len, "%s?type=msearch&arg=%s", aur, maintainer);
+	//am_printf(AM_LOG_DEBUG, "url: %s\n", url);
+	
+	// query aur
+	if (am_perform_get(url, &data, &size) == 0) {
+		//am_printf(AM_LOG_DEBUG, "size: %d\n", size);
+		// I don't like this, I know it's nasty
+        str = (char *)malloc(size + 1);
+		str[size] = '\0';
+		strncpy(str, (char *)data, size);
+		//am_printf(AM_LOG_DEBUG, "str: %s\n", str);
+        _am_pip_get_type(str, &str);
+		//am_printf(AM_LOG_DEBUG, "tail: %s\n", tail);
+		printf("Packags maintained by %s:\n", maintainer);
+		//am_printf(AM_LOG_DEBUG, "str: %s\n", str);
+		_am_pip_foreach(str, NULL, my_handler); // crude temp name
+        //free(str);
+		free(data);
+	} else {
+		// panic!
+		ret = -3;
+		goto exit;
+	}
+
+exit:
+	if (url != NULL) {
+		free(url);
+	}
+	return ret;
+}
+
 //------------------------------------------------------------------
 int am_aur (int argc, char *argv[])
 {
@@ -1590,6 +1716,11 @@ int am_aur (int argc, char *argv[])
         /* am_pack(handle); */
     /* } */
 
+	if (config->maintainer != NULL)	{
+		am_exec_maintainer(config->maintainer);
+		free(config->maintainer);
+	}
+
     curl_easy_cleanup(handle);
     curl_global_cleanup();
     free(pkg_name);
diff --git a/src/aurman/conf.h b/src/aurman/conf.h
index dda440e..6377fe6 100755
--- a/src/aurman/conf.h
+++ b/src/aurman/conf.h
@@ -44,6 +44,8 @@ typedef struct __config_t {
 	char *category;
 	/* TODO how to handle cachedirs? */
 
+	char *maintainer;
+
 	unsigned short op_q_isfile;
 	unsigned short op_q_info;
 	unsigned short op_q_list;
@@ -135,7 +137,8 @@ enum {
 	AM_LONG_OP_NEEDED,
 	AM_LONG_OP_ASEXPLICIT,
 	AM_LONG_OP_ARCH,
-	AM_LONG_OP_SOURCE
+	AM_LONG_OP_SOURCE,
+	AM_LONG_OP_MAINTAINER
 };
 
 /* clean method */
-- 
1.6.4.4



From dante4d at gmail.com  Wed Oct 14 18:37:45 2009
From: dante4d at gmail.com (=?UTF-8?q?David=20H=C3=A1jek?=)
Date: Wed, 14 Oct 2009 18:37:45 +0200
Subject: [Aurman-dev] [PATCH 2/2] --maintainer option refactoring,
	colorized output
Message-ID: <1255538265-11888-1-git-send-email-dante4d@gmail.com>

I refactored out some nastiness and made the code nicer to my eye.
I also added a first insinght onto colored output. You can simply
try by compiling and doing `aurman am --maintainer dante4d' e.g..

Signed-off-by: David H?jek <dante4d at gmail.com>
---
 src/aurman/aurman.c |  187 +++++++++++++++++++++++++++++++++------------------
 1 files changed, 121 insertions(+), 66 deletions(-)

diff --git a/src/aurman/aurman.c b/src/aurman/aurman.c
index b1c1d84..209f44d 100755
--- a/src/aurman/aurman.c
+++ b/src/aurman/aurman.c
@@ -1456,57 +1456,117 @@ static int parseargs(int argc, char *argv[])
 }
 
 // data from json query - this should be refactored later
-char *aur_json_data = NULL;
-size_t old_len = 0;
+static char *aur_rpc_data = NULL;
+static size_t old_len = 0;
+
 /**
- * @brief	cURL handler for exec_maintainer
+ * @brief	cURL write callback function used by am_curl_perform_aur_rpc
  *
  * @param 	ptr		raw data to save
  * @param	size	size of character
  * @param	nmemb   number of characters 
  * @param	stream
  * @return	number of bytes actually taken care of - other than passed = error
- *
- * @todo refactor
  */
 size_t am_curl_write_callback(void *ptr, size_t size, size_t nmemb, void *stream)
 {
-	//static size_t old_len = 0;
 	size_t cur_len = size * nmemb;
 	size_t new_len = old_len + cur_len;
 
-	//am_printf(AM_LOG_DEBUG, "old_len: %d\n", old_len);
-	//am_printf(AM_LOG_DEBUG, "cur_len: %d\n", cur_len);
-	//am_printf(AM_LOG_DEBUG, "new_len: %d\n", new_len);
-
-	aur_json_data = (char *)realloc(aur_json_data, new_len); // on first go, realloc is like malloc
-
-	//am_printf(AM_LOG_DEBUG, "aur_json_data: %p\n", aur_json_data);
-
-	memcpy(aur_json_data + old_len, ptr, cur_len);
-
+	// is this the good way to do it?
+	aur_rpc_data = (char *)realloc(aur_rpc_data, new_len);
+	memcpy(aur_rpc_data + old_len, ptr, cur_len);
 	old_len = new_len;
 
 	return cur_len; // no error
 }
 
-int am_perform_get(char *url, void **data, size_t *size)
-{
+/**
+ * @brief	Perform AUR RPC
+ *
+ * @param	type	method to call
+ * @param	arg     argument to pass to method
+ * @param	data    retrieved characters, mus be freed afterwards
+ * @param	size    number of retrieved characters
+ * @return	0 success, others error
+ *
+ * See http://aur.archlinux.org/rpc.php and http://aur.louipc.mine.nu/rpc.php.
+ */
+int am_curl_perform_aur_rpc(
+		char const *type,
+		char const *arg,
+		char **data,
+		size_t *size)
+{                  
+	int ret = 0;
+	// @todo move to config
+	char const *base_url = "http://aur.louipc.mine.nu/rpc.php"; 
+    int len = 0;
+	char *full_url = NULL;
+
+	// url + '\0'
+	len = snprintf(NULL, 0, "%s?type=%s&arg=%s", base_url, type, arg) + 1;
+	if (!(full_url = calloc(len, sizeof(char)))) {
+		ret = -1; // @todo enum? 
+		goto exit;
+	}
+	snprintf(full_url, len, "%s?type=%s&arg=%s", base_url, type, arg);
+
 	curl_easy_setopt(handle, CURLOPT_WRITEFUNCTION, am_curl_write_callback);
-    curl_easy_setopt(handle, CURLOPT_URL, url);
+    curl_easy_setopt(handle, CURLOPT_URL, full_url);
     curl_easy_perform(handle);
 
-	*data = aur_json_data;
-	*size = old_len;
-	
-	return 0;
-}
+	// nasty way to add trailing \0
+	aur_rpc_data = (char *)realloc(aur_rpc_data, old_len + 1);
+	aur_rpc_data[old_len] = '\0';
+	*data = aur_rpc_data;
+	*size = old_len;  	
+	// reset helper variables if another call should occur
+	aur_rpc_data = NULL;
+	old_len = 0;
 
-//typedef void (*pkg_info_handler_t)(pkg_info_t *info);
+exit:
+	if (full_url != NULL) {
+		free(full_url);
+	}
+	return ret;
+}
 
-void my_handler(pkg_info_t *info)
+/**
+ * @brief	A first go at colored output function
+ *
+ * @param	attr	see http://tldp.org/HOWTO/Bash-Prompt-HOWTO/x329.html
+ * @param	fg    	see http://tldp.org/HOWTO/Bash-Prompt-HOWTO/x329.html
+ * @param	bg	  	see http://tldp.org/HOWTO/Bash-Prompt-HOWTO/x329.html
+ *
+ * This works as printf, but gives also color. For the sake if simplicity,
+ * I just use some hardcoded values down there, so next TODO is to
+ * introduce configurable colors and other things...
+ * We need to have it more flexible - just bold text, just color, just
+ * underline, just italic etc...
+ *
+ * See http://tldp.org/HOWTO/Bash-Prompt-HOWTO/x329.html and
+ * http://aur.archlinux.org/packages.php?ID=11827.
+ */
+int color_printf(int attr, int fg/*, int bg*/, char const *format, ...)
 {
-	printf("%s\n", info->name);
+	char command[13];
+	int ret;
+	va_list args;
+        
+	// begin colors
+	//sprintf(command, "%c[%d;%d;%dm", 0x1B, attr, fg, bg);
+    printf("%c[%d;%dm", 0x1b, attr, fg);
+
+	// the text itself
+	va_start(args, format);
+	ret = vprintf(format, args);
+	va_end(args);
+
+	// end colors
+    printf("%c[0m", 0x1b);
+
+	return ret;
 }
 
 /**
@@ -1523,59 +1583,54 @@ void my_handler(pkg_info_t *info)
 int am_exec_maintainer(char *maintainer)
 {
 	int ret = 0;
-	// quick & dirty way to get me where I need to be
-	char *aur = "http://aur.louipc.mine.nu/rpc.php";
-	//char *aur = "http://aur.archlinux.org/rpc.php";
-	int len;
-	char *url = NULL;
-	// am_perform_get output
 	void *data = NULL;
 	size_t size;
-	char *str = NULL;
-	//char *tail = NULL;
-
-	// check arg
-	if (maintainer == NULL) {
-		ret = -1; // @todo enum?
-		goto exit;
-	}
+	pkg_info_t info;
 
-	len = snprintf(NULL, 0, "%s?type=msearch&arg=%s", aur, maintainer) + 1; // url + \0
-	if (!(url = malloc(len * sizeof(char)))) {
-		ret = -2; // @todo enum? 
-		goto exit;
-	}
-	snprintf(url, len, "%s?type=msearch&arg=%s", aur, maintainer);
-	//am_printf(AM_LOG_DEBUG, "url: %s\n", url);
-	
-	// query aur
-	if (am_perform_get(url, &data, &size) == 0) {
-		//am_printf(AM_LOG_DEBUG, "size: %d\n", size);
-		// I don't like this, I know it's nasty
-        str = (char *)malloc(size + 1);
-		str[size] = '\0';
-		strncpy(str, (char *)data, size);
-		//am_printf(AM_LOG_DEBUG, "str: %s\n", str);
-        _am_pip_get_type(str, &str);
-		//am_printf(AM_LOG_DEBUG, "tail: %s\n", tail);
+	if (am_curl_perform_aur_rpc("msearch", maintainer, &data, &size) == 0) {
+        _am_pip_get_type(data, &data);
 		printf("Packags maintained by %s:\n", maintainer);
-		//am_printf(AM_LOG_DEBUG, "str: %s\n", str);
-		_am_pip_foreach(str, NULL, my_handler); // crude temp name
-        //free(str);
-		free(data);
+        // @idea make function that parses json output and gives list of
+		// pkg_info structs
+		_am_pkg_info_init(&info);
+		while (_am_pip_info(data, &data, &info)) {
+			//	typedef struct pkg_info {
+			// 		const char *name;
+			// 		const char *version;
+			// 		const char *description;
+			// 		const char *url;
+			// 		const char *path;
+			// 		const char *license;
+			// 		unsigned int id;
+			// 		unsigned int category;
+			// 		unsigned int location;
+			// 		unsigned int votes;
+			//	 	unsigned int out_of_date;
+			//	} pkg_info_t;
+			color_printf(1, 35, "aur/");
+			color_printf(1, 37, "%s ", info.name);
+			color_printf(1, 32, "%s\n", info.version);
+			color_printf(3, 37, "\t%s\n", info.description);
+		}
+		// this felt messy for a simple task 
+		//_am_pip_foreach(data, NULL, my_handler);
 	} else {
-		// panic!
 		ret = -3;
 		goto exit;
 	}
 
 exit:
-	if (url != NULL) {
-		free(url);
+	if (data != NULL) {
+		free(data);
 	}
 	return ret;
 }
 
+int am_exec_search(char *name)
+{
+	return 0;
+}
+
 //------------------------------------------------------------------
 int am_aur (int argc, char *argv[])
 {
-- 
1.6.4.4



From dante4d at gmail.com  Wed Oct 14 18:54:57 2009
From: dante4d at gmail.com (=?UTF-8?q?David=20H=C3=A1jek?=)
Date: Wed, 14 Oct 2009 18:54:57 +0200
Subject: [Aurman-dev] [PATCH 3/3] Proof of concept search function
Message-ID: <1255539297-12475-1-git-send-email-dante4d@gmail.com>

I just want to show how easily I've done a search function now I made
some prerequisitary stuff. I'd pretty much honor from refactoring of the
oprion parser to the function pointer thing, so we could easily throw in
some more options. I'd like to have the yaourt -Ss AUR search thing done
ASAP, which is the main reason I use yaourt beside doing makepkg in the
process on the fetched PKGBUILD and then pacman -U.

Signed-off-by: David H?jek <dante4d at gmail.com>
---
 src/aurman/aurman.c |   36 +++++++++++++++++++++++++++++++++---
 1 files changed, 33 insertions(+), 3 deletions(-)

diff --git a/src/aurman/aurman.c b/src/aurman/aurman.c
index 209f44d..c33fb68 100755
--- a/src/aurman/aurman.c
+++ b/src/aurman/aurman.c
@@ -1589,7 +1589,7 @@ int am_exec_maintainer(char *maintainer)
 
 	if (am_curl_perform_aur_rpc("msearch", maintainer, &data, &size) == 0) {
         _am_pip_get_type(data, &data);
-		printf("Packags maintained by %s:\n", maintainer);
+		printf("Packages maintained by %s:\n", maintainer);
         // @idea make function that parses json output and gives list of
 		// pkg_info structs
 		_am_pkg_info_init(&info);
@@ -1626,9 +1626,35 @@ exit:
 	return ret;
 }
 
-int am_exec_search(char *name)
+/**
+ * @brief	Experimental search function
+ */
+int am_exec_search(char *arg)
 {
-	return 0;
+ 	int ret = 0;
+	void *data = NULL;
+	size_t size;
+	pkg_info_t info;
+
+	if (am_curl_perform_aur_rpc("search", arg, &data, &size) == 0) {
+        _am_pip_get_type(data, &data);
+		_am_pkg_info_init(&info);
+		while (_am_pip_info(data, &data, &info)) {
+			color_printf(1, 35, "aur/");
+			color_printf(1, 37, "%s ", info.name);
+			color_printf(1, 32, "%s\n", info.version);
+			color_printf(3, 37, "\t%s\n", info.description);
+		}
+	} else {
+		ret = -3;
+		goto exit;
+	}
+
+exit:
+	if (data != NULL) {
+		free(data);
+	}
+	return ret;
 }
 
 //------------------------------------------------------------------
@@ -1776,6 +1802,10 @@ int am_aur (int argc, char *argv[])
 		free(config->maintainer);
 	}
 
+	// quick & dirty test of search func
+	color_printf("A nasty hardcoded test of search function:");
+	am_exec_search("aurman");
+
     curl_easy_cleanup(handle);
     curl_global_cleanup();
     free(pkg_name);
-- 
1.6.4.4



From djszapi at archlinux.us  Sat Oct 17 16:01:55 2009
From: djszapi at archlinux.us (djszapi at archlinux.us)
Date: Sat, 17 Oct 2009 16:01:55 +0200
Subject: [Aurman-dev] [Git]Project aurman at BerliOS branch, maint,
	updated. 8b47f0cb1a1916b1fc368b7aaa64a02bde1f80ac
Message-ID: <200910171401.n9HE1tvg002793@sheep.berlios.de>

This is an automated email from the git hooks/post-receive script. It was
generated because a ref change was pushed to the repository containing
the project "Project aurman at BerliOS".

The branch, maint has been updated
  discards  e5d94737c1ab005020cc2fa366ec2e04a2756f9d (commit)
       via  8b47f0cb1a1916b1fc368b7aaa64a02bde1f80ac (commit)

This update added new revisions after undoing existing revisions.  That is
to say, the old revision is not a strict subset of the new revision.  This
situation occurs when you --force push a change and generate a repository
containing something like this:

 * -- * -- B -- O -- O -- O (e5d94737c1ab005020cc2fa366ec2e04a2756f9d)
            \
             N -- N -- N (8b47f0cb1a1916b1fc368b7aaa64a02bde1f80ac)

When this happens we assume that you've already had alert emails for all
of the O revisions, and so we here report only the revisions in the N
branch from the common base, B.

Those revisions listed above that are new to this repository have
not appeared on any other notification email; so we list those
revisions in full, below.

- Log -----------------------------------------------------------------
commit 8b47f0cb1a1916b1fc368b7aaa64a02bde1f80ac
Author: David H??jek <dante4d at gmail.com>
Date:   Fri Oct 16 01:20:53 2009 +0200

    Add --msearch option
    
    * char *maintainer added to config_t struct
    * operation AM_LONG_OP_MSEARCH added to enum
    * free(maintainer) statement added to config_free
    * --msearch operation added to usage function
    * parsing of --msearch operation added to parseargs function
    * added am_exec_maintaner function to execute the operation
    * added get_pkg_data function that queries AUR using given method type and arg;
      the query URL is hardcoded to test one - http://aur.louipc.mine.nu/rpc.php;
      returns AM_ERR_MEMORY on bad calloc call
    * constant AM_USERNAME_MAX added to libalam/alam.h
    * call to config_free added at bottom of am_aur function
    * man page was NOT updated
    
    Signed-off-by: David H??jek <dante4d at gmail.com>
    Signed-off-by: Laszlo Papp <djszapi at archlinux.us>

-----------------------------------------------------------------------

Summary of changes:


hooks/post-receive
-- 
Project aurman at BerliOS


From djszapi at archlinux.us  Sat Oct 17 20:40:56 2009
From: djszapi at archlinux.us (djszapi at archlinux.us)
Date: Sat, 17 Oct 2009 20:40:56 +0200
Subject: [aurman-dev] [Git]Project aurman at BerliOS branch, maint,
	updated. 7253e66996a192df8b4843f9481316a9507d59da
Message-ID: <200910171840.n9HIeuhS017605@sheep.berlios.de>

This is an automated email from the git hooks/post-receive script. It was
generated because a ref change was pushed to the repository containing
the project "Project aurman at BerliOS".

The branch, maint has been updated
       via  7253e66996a192df8b4843f9481316a9507d59da (commit)
      from  8b47f0cb1a1916b1fc368b7aaa64a02bde1f80ac (commit)

Those revisions listed above that are new to this repository have
not appeared on any other notification email; so we list those
revisions in full, below.

- Log -----------------------------------------------------------------
commit 7253e66996a192df8b4843f9481316a9507d59da
Author: Laszlo Papp <djszapi at archlinux.us>
Date:   Sat Oct 17 20:32:19 2009 +0200

    Refactor AM_LONG_OP_* enumeration names
    
    	* Refactor the AM_LONG_OP_* enumeration names for OP_* in parseargs function
    	and in the related conf.h file. The reason for it first of all it's better
    	to name it so because it's more reasonable, and pacman developer decided to
    	use it so, and our purpose to be more closed with other Archlinux related
    	projects. You can see here the pacman related reference
    	f9582c7df223e1eb4078e6db4e2d35dc0f2bf9be.
    
    Signed-off-by: Laszlo Papp <djszapi at archlinux.us>

-----------------------------------------------------------------------

Summary of changes:
 Makefile.in         |  805 ---------------------------------------------------
 src/aurman/aurman.c |  180 ++++++------
 src/aurman/conf.h   |   76 +++---
 3 files changed, 128 insertions(+), 933 deletions(-)
 delete mode 100644 Makefile.in


hooks/post-receive
-- 
Project aurman at BerliOS


From djszapi at archlinux.us  Sun Oct 18 16:28:13 2009
From: djszapi at archlinux.us (djszapi at archlinux.us)
Date: Sun, 18 Oct 2009 16:28:13 +0200
Subject: [aurman-dev] [Git]Project aurman at BerliOS branch, master,
	updated. a4053f2acee40162c7f67c1bf82b5d25601e2e94
Message-ID: <200910181428.n9IESDe3019823@sheep.berlios.de>

This is an automated email from the git hooks/post-receive script. It was
generated because a ref change was pushed to the repository containing
the project "Project aurman at BerliOS".

The branch, master has been updated
       via  a4053f2acee40162c7f67c1bf82b5d25601e2e94 (commit)
       via  40c91f4fd0fab7a16c5dbeb695fa4a83fe7aa042 (commit)
       via  7253e66996a192df8b4843f9481316a9507d59da (commit)
       via  8b47f0cb1a1916b1fc368b7aaa64a02bde1f80ac (commit)
      from  66369585e205e37b74778d4e34b292639948779f (commit)

Those revisions listed above that are new to this repository have
not appeared on any other notification email; so we list those
revisions in full, below.

- Log -----------------------------------------------------------------
commit a4053f2acee40162c7f67c1bf82b5d25601e2e94
Author: Laszlo Papp <djszapi at archlinux.us>
Date:   Sun Oct 18 01:55:08 2009 +0200

    build: fix autotools warnings/errors
    
    Fix the following autoreconf warnings:
    
    libtoolize: You should add the contents of the following files to `aclocal.m4':
    libtoolize:   `/usr/share/aclocal/libtool.m4'
    libtoolize:   `/usr/share/aclocal/ltoptions.m4'
    libtoolize:   `/usr/share/aclocal/ltversion.m4'
    libtoolize:   `/usr/share/aclocal/ltsugar.m4'
    libtoolize:   `/usr/share/aclocal/lt~obsolete.m4'
    libtoolize: Consider adding `AC_CONFIG_MACRO_DIR([m4])' to configure.ac and
    libtoolize: rerunning libtoolize, to keep the correct libtool macros in-tree.
    libtoolize: Consider adding `-I m4' to ACLOCAL_AMFLAGS in Makefile.am.
    Makefile.am: required file `./NEWS' not found
    Makefile.am: required file `./ChangeLog' not found
    configure.ac:132: required file `./ABOUT-NLS' not found
    
    Signed-off-by: Laszlo Papp <djszapi at archlinux.us>

commit 40c91f4fd0fab7a16c5dbeb695fa4a83fe7aa042
Author: Laszlo Papp <djszapi at archlinux.us>
Date:   Sun Oct 18 01:46:28 2009 +0200

    Update .gitignore and remove autotools files
    
    All the ignored files should not be tracked or they do not get
    removed on `git clean -dfx`, thus preventing correct reruns of
    autogen.sh

-----------------------------------------------------------------------

Summary of changes:
 .gitignore          |   30 +-
 INSTALL             |  245 --
 Makefile.in         |  805 ------
 aclocal.m4          | 3149 -----------------------
 autoclean.sh        |   30 +-
 autogen.sh          |    6 +-
 config.guess        | 1526 -----------
 config.h.in         |  246 --
 config.sub          | 1658 ------------
 configure.ac        |    3 +-
 depcomp             |  584 -----
 install-sh          |  507 ----
 lib/libalam/alam.h  |    5 +
 ltmain.sh           | 6956 ---------------------------------------------------
 m4/.gitignore       |    2 +
 missing             |  367 ---
 mkinstalldirs       |  161 --
 src/aurman/aurman.c |  296 ++-
 src/aurman/conf.c   |    1 +
 src/aurman/conf.h   |   77 +-
 20 files changed, 275 insertions(+), 16379 deletions(-)
 delete mode 100644 INSTALL
 delete mode 100644 Makefile.in
 delete mode 100644 aclocal.m4
 delete mode 100755 config.guess
 delete mode 100644 config.h.in
 delete mode 100755 config.sub
 delete mode 100755 depcomp
 delete mode 100755 install-sh
 delete mode 100755 ltmain.sh
 create mode 100644 m4/.gitignore
 delete mode 100755 missing
 delete mode 100755 mkinstalldirs


hooks/post-receive
-- 
Project aurman at BerliOS


From djszapi at archlinux.us  Fri Oct 23 14:24:13 2009
From: djszapi at archlinux.us (djszapi at archlinux.us)
Date: Fri, 23 Oct 2009 14:24:13 +0200
Subject: [aurman-dev] [Git]Project aurman at BerliOS branch, master,
	updated. 572d05918fc7f85a73a22a7f3ff98e1dc9ac45c6
Message-ID: <200910231224.n9NCODEo005107@sheep.berlios.de>

This is an automated email from the git hooks/post-receive script. It was
generated because a ref change was pushed to the repository containing
the project "Project aurman at BerliOS".

The branch, master has been updated
       via  572d05918fc7f85a73a22a7f3ff98e1dc9ac45c6 (commit)
       via  dcadd6b8892b210a9324fde618d3fd62b5b1de1f (commit)
      from  a4053f2acee40162c7f67c1bf82b5d25601e2e94 (commit)

Those revisions listed above that are new to this repository have
not appeared on any other notification email; so we list those
revisions in full, below.

- Log -----------------------------------------------------------------
commit 572d05918fc7f85a73a22a7f3ff98e1dc9ac45c6
Author: Laszlo Papp <djszapi at archlinux.us>
Date:   Fri Oct 23 09:22:50 2009 +0200

    Change visibility of alam_makepath_mode function
    
    	* Change the visibility of _alam_makepath_mode function from the
    	./lib/libalam/util.c, because it will be used in more places, like in case
    	of ./contrib/pkgfile.c. The declaration was removed from
    	./lib/libalam/util.h to ./lib/libalam/alam.h, and the definition of this
    	function got a 'SYMEXPORT' prefix, as in case of other API function.
    
    Signed-off-by: Laszlo Papp <djszapi at archlinux.us>

commit dcadd6b8892b210a9324fde618d3fd62b5b1de1f
Author: Laszlo Papp <djszapi at archlinux.us>
Date:   Fri Oct 23 08:50:59 2009 +0200

    Delete file_exist function and some commented lines
    
    	* Delete file_exist function because of two reasons
    		- It isn't used at this momment
    		- If it will be used we can use access function instead of it
    	* Delete commented source lines from aurman.c which is not needed anymore,
    	it was used only the beginning of aurman development
    
    Signed-off-by: Laszlo Papp <djszapi at archlinux.us>

-----------------------------------------------------------------------

Summary of changes:
 lib/libalam/alam.h     |    4 +++-
 lib/libalam/be_files.c |    4 ++--
 lib/libalam/trans.c    |    2 +-
 lib/libalam/util.c     |    4 ++--
 lib/libalam/util.h     |    1 -
 src/aurman/aurman.c    |   42 ------------------------------------------
 6 files changed, 8 insertions(+), 49 deletions(-)


hooks/post-receive
-- 
Project aurman at BerliOS


From djszapi at archlinux.us  Fri Oct 23 20:39:52 2009
From: djszapi at archlinux.us (djszapi at archlinux.us)
Date: Fri, 23 Oct 2009 20:39:52 +0200
Subject: [aurman-dev] [Git]Project aurman at BerliOS branch, master,
	updated. 5c71d00964f7a4c74fe39347a20ff8fcb1a8c657
Message-ID: <200910231839.n9NIdqsC032437@sheep.berlios.de>

This is an automated email from the git hooks/post-receive script. It was
generated because a ref change was pushed to the repository containing
the project "Project aurman at BerliOS".

The branch, master has been updated
       via  5c71d00964f7a4c74fe39347a20ff8fcb1a8c657 (commit)
       via  9f108c579a51dd3c91025ea0b847080146c1ba76 (commit)
       via  28a65a5c93bf58f74d0106486da40b6fe54c3a97 (commit)
       via  d1c68217a4feb66d93754cd0208a16850bb9810e (commit)
      from  572d05918fc7f85a73a22a7f3ff98e1dc9ac45c6 (commit)

Those revisions listed above that are new to this repository have
not appeared on any other notification email; so we list those
revisions in full, below.

- Log -----------------------------------------------------------------
commit 5c71d00964f7a4c74fe39347a20ff8fcb1a8c657
Author: Laszlo Papp <djszapi at archlinux.us>
Date:   Fri Oct 23 19:29:57 2009 +0200

    build: split acinclude.m4
    
    The automake manual recommends against acinclude.m4:
    
    	"The first possibility (the historical practice) is to list
    	all your macros in `acinclude.m4'. This file will be included
    	in `aclocal.m4' when you run `aclocal', and its macro(s) will
    	henceforth be visible to `autoconf'. However if it contains
    	numerous macros, it will rapidly become difficult to maintain,
    	and it will be almost impossible to share macros between
    	packages."

commit 9f108c579a51dd3c91025ea0b847080146c1ba76
Author: Laszlo Papp <djszapi at archlinux.us>
Date:   Fri Oct 23 19:28:17 2009 +0200

    build: add missing ACLOCAL_AMFLAGS
    
    In configure.ac we have AC_CONFIG_MACRO_DIR([m4]), which ideally also
    wants ACLOCAL_AMFLAGS in Makefile.am per automake's suggestion.

commit 28a65a5c93bf58f74d0106486da40b6fe54c3a97
Author: Laszlo Papp <djszapi at archlinux.us>
Date:   Fri Oct 23 18:56:24 2009 +0200

    Remove move autogenerated files

commit d1c68217a4feb66d93754cd0208a16850bb9810e
Author: Laszlo Papp <djszapi at archlinux.us>
Date:   Fri Oct 23 19:26:04 2009 +0200

    build: remove libtool macros from acinclude.m4
    
    acinclude.m4 is supposed to _only_ contain user macros. If libtool's
    macros are present in acinclude.m4, they would take precedence over
    the system's libtool and thus lead to hard-to-debug error messages
    like:
    
    ../../libtool: line 463: CDPATH: command not found
    ../../libtool: line 1141: func_opt_split: command not found
    libtool: Version mismatch error.  This is libtool 2.2.6, but the
    libtool: definition of this LT_INIT comes from an older release.
    libtool: You should recreate aclocal.m4 with macros from libtool 2.2.6
    libtool: and run autoconf again.

-----------------------------------------------------------------------

Summary of changes:
 .gitignore                 |    3 +
 Makefile.am                |    3 +
 acinclude.m4               | 4952 --------------------------------------------
 config.rpath               |  614 ------
 lib/libalam/po/Makefile.in |  355 ----
 m4/.gitignore              |   31 +
 m4/gcc-inline.m4           |   19 +
 m4/gcc-ssp.m4              |   19 +
 m4/gcc-ssplib.m4           |   17 +
 m4/gcc-visibility.m4       |   19 +
 po/.gitignore              |    9 +
 po/Makefile.in             |  355 ----
 po/Makefile.in.in          |  355 ----
 po/remove-potcdate.sin     |   19 -
 scripts/Makefile.in        |  492 -----
 15 files changed, 120 insertions(+), 7142 deletions(-)
 delete mode 100755 acinclude.m4
 delete mode 100755 config.rpath
 delete mode 100644 lib/libalam/po/Makefile.in
 create mode 100644 m4/gcc-inline.m4
 create mode 100644 m4/gcc-ssp.m4
 create mode 100644 m4/gcc-ssplib.m4
 create mode 100644 m4/gcc-visibility.m4
 create mode 100644 po/.gitignore
 delete mode 100644 po/Makefile.in
 delete mode 100755 po/Makefile.in.in
 delete mode 100755 po/remove-potcdate.sin
 delete mode 100644 scripts/Makefile.in


hooks/post-receive
-- 
Project aurman at BerliOS


From djszapi at archlinux.us  Sat Oct 24 22:55:00 2009
From: djszapi at archlinux.us (djszapi at archlinux.us)
Date: Sat, 24 Oct 2009 22:55:00 +0200
Subject: [aurman-dev] [Git]Project aurman at BerliOS branch, master,
	updated. f74f99d2481f7281ec135c0f143df9ed96f0e78a
Message-ID: <200910242055.n9OKt0sm021651@sheep.berlios.de>

This is an automated email from the git hooks/post-receive script. It was
generated because a ref change was pushed to the repository containing
the project "Project aurman at BerliOS".

The branch, master has been updated
  discards  5c71d00964f7a4c74fe39347a20ff8fcb1a8c657 (commit)
  discards  9f108c579a51dd3c91025ea0b847080146c1ba76 (commit)
  discards  28a65a5c93bf58f74d0106486da40b6fe54c3a97 (commit)
  discards  d1c68217a4feb66d93754cd0208a16850bb9810e (commit)
       via  f74f99d2481f7281ec135c0f143df9ed96f0e78a (commit)
       via  ad281846ead811948610fb13b7346b249b8d4314 (commit)
       via  168c7b0a2d1479018987277cd66f22e1b1194fec (commit)

This update added new revisions after undoing existing revisions.  That is
to say, the old revision is not a strict subset of the new revision.  This
situation occurs when you --force push a change and generate a repository
containing something like this:

 * -- * -- B -- O -- O -- O (5c71d00964f7a4c74fe39347a20ff8fcb1a8c657)
            \
             N -- N -- N (f74f99d2481f7281ec135c0f143df9ed96f0e78a)

When this happens we assume that you've already had alert emails for all
of the O revisions, and so we here report only the revisions in the N
branch from the common base, B.

Those revisions listed above that are new to this repository have
not appeared on any other notification email; so we list those
revisions in full, below.

- Log -----------------------------------------------------------------
commit f74f99d2481f7281ec135c0f143df9ed96f0e78a
Author: Laszlo Papp <djszapi at archlinux.us>
Date:   Sat Oct 24 22:53:27 2009 +0200

    Add the first mysql.c serverside source file
    
    The task of this server code source to register a user in the AUR database
    correctly.
    
    Signed-off-by: Laszlo Papp <djszapi at archlinux.us>

commit ad281846ead811948610fb13b7346b249b8d4314
Author: Laszlo Papp <djszapi at archlinux.us>
Date:   Sat Oct 24 22:51:28 2009 +0200

    Refactor colorizing in the frontend
    
    color.c source file was refactored, mainly the colorizeoutputline was refactored
    according to the yaourt's color.sh library
    
    Signed-off-by: Laszlo Papp <djszapi at archlinux.us>

commit 168c7b0a2d1479018987277cd66f22e1b1194fec
Author: Laszlo Papp <djszapi at archlinux.us>
Date:   Sat Oct 24 20:38:07 2009 +0200

    Fix ALAM for Arch Linux AUR Management
    
    Signed-off-by: Laszlo Papp <djszapi at archlinux.us>

-----------------------------------------------------------------------

Summary of changes:
 .gitignore                                      |    3 -
 Makefile.am                                     |    3 -
 README                                          |    2 +-
 acinclude.m4                                    | 4952 +++++++++++++++++++++++
 config.rpath                                    |  614 +++
 lib/libalam/po/{Makefile.in.in => Makefile.in}  |   42 +-
 m4/.gitignore                                   |   31 -
 m4/gcc-inline.m4                                |   19 -
 m4/gcc-ssp.m4                                   |   19 -
 m4/gcc-ssplib.m4                                |   17 -
 m4/gcc-visibility.m4                            |   19 -
 po/.gitignore                                   |    9 -
 lib/libalam/po/Makefile.in.in => po/Makefile.in |   42 +-
 {lib/libalam/po => po}/Makefile.in.in           |    0
 {lib/libalam/po => po}/remove-potcdate.sin      |    0
 scripts/Makefile.in                             |  492 +++
 server/mysql.c                                  |  169 +
 src/aurman/color.c                              |  238 +-
 18 files changed, 6417 insertions(+), 254 deletions(-)
 create mode 100755 acinclude.m4
 create mode 100755 config.rpath
 copy lib/libalam/po/{Makefile.in.in => Makefile.in} (95%)
 delete mode 100644 m4/gcc-inline.m4
 delete mode 100644 m4/gcc-ssp.m4
 delete mode 100644 m4/gcc-ssplib.m4
 delete mode 100644 m4/gcc-visibility.m4
 delete mode 100644 po/.gitignore
 copy lib/libalam/po/Makefile.in.in => po/Makefile.in (95%)
 copy {lib/libalam/po => po}/Makefile.in.in (100%)
 mode change 100644 => 100755
 copy {lib/libalam/po => po}/remove-potcdate.sin (100%)
 create mode 100644 scripts/Makefile.in
 create mode 100644 server/mysql.c


hooks/post-receive
-- 
Project aurman at BerliOS


From djszapi at archlinux.us  Sat Oct 24 23:33:52 2009
From: djszapi at archlinux.us (djszapi at archlinux.us)
Date: Sat, 24 Oct 2009 23:33:52 +0200
Subject: [aurman-dev] [Git]Project aurman at BerliOS branch, master,
	updated. 1f827bf273c494743233235226cc40d69f182b4d
Message-ID: <200910242133.n9OLXqCP029528@sheep.berlios.de>

This is an automated email from the git hooks/post-receive script. It was
generated because a ref change was pushed to the repository containing
the project "Project aurman at BerliOS".

The branch, master has been updated
       via  1f827bf273c494743233235226cc40d69f182b4d (commit)
       via  40642d2123deb6d803169f9a22a084f325fc69fe (commit)
       via  98b4108c40d614e8df9f5105c49364685b39ec50 (commit)
       via  6ce06fd61033edadc56128dfba78c862afb93e37 (commit)
      from  f74f99d2481f7281ec135c0f143df9ed96f0e78a (commit)

Those revisions listed above that are new to this repository have
not appeared on any other notification email; so we list those
revisions in full, below.

- Log -----------------------------------------------------------------
commit 1f827bf273c494743233235226cc40d69f182b4d
Author: Laszlo Papp <djszapi at archlinux.us>
Date:   Sat Oct 24 23:27:32 2009 +0200

     build: split acinclude.m4
    
    The automake manual recommends against acinclude.m4:
    
    "The first possibility (the historical practice) is to list
    all your macros in `acinclude.m4'. This file will be included
    in `aclocal.m4' when you run `aclocal', and its macro(s) will
    henceforth be visible to `autoconf'. However if it contains
    numerous macros, it will rapidly become difficult to maintain,
    and it will be almost impossible to share macros between
    packages."
    
    Signed-off-by: Laszlo Papp <djszapi at archlinux.us>

commit 40642d2123deb6d803169f9a22a084f325fc69fe
Author: Laszlo Papp <djszapi at archlinux.us>
Date:   Sat Oct 24 23:25:08 2009 +0200

    build: add missing ACLOCAL_AMFLAGS
    
    In configure.ac we have AC_CONFIG_MACRO_DIR([m4]), which ideally also
    wants ACLOCAL_AMFLAGS in Makefile.am per automake's suggestion.
    
    Signed-off-by: Laszlo Papp <djszapi at archlinux.us>

commit 98b4108c40d614e8df9f5105c49364685b39ec50
Author: Laszlo Papp <djszapi at archlinux.us>
Date:   Sat Oct 24 23:24:29 2009 +0200

    Remove move autogenerated files
    
    Signed-off-by: Laszlo Papp <djszapi at archlinux.us>

commit 6ce06fd61033edadc56128dfba78c862afb93e37
Author: Laszlo Papp <djszapi at archlinux.us>
Date:   Sat Oct 24 23:22:49 2009 +0200

    build: remove libtool macros from acinclude.m4
    
    acinclude.m4 is supposed to _only_ contain user macros. If libtool's
    macros are present in acinclude.m4, they would take precedence over
    the system's libtool and thus lead to hard-to-debug error messages
    like:
    
    ../../libtool: line 463: CDPATH: command not found
    ../../libtool: line 1141: func_opt_split: command not found
    libtool: Version mismatch error.  This is libtool 2.2.6, but the
    libtool: definition of this LT_INIT comes from an older release.
    libtool: You should recreate aclocal.m4 with macros from libtool 2.2.6
    libtool: and run autoconf again.
    
    Signed-off-by: Laszlo Papp <djszapi at archlinux.us>

-----------------------------------------------------------------------

Summary of changes:
 .gitignore                 |    3 +
 Makefile.am                |    3 +
 acinclude.m4               | 4952 --------------------------------------------
 config.rpath               |  614 ------
 lib/libalam/po/Makefile.in |  355 ----
 m4/.gitignore              |   31 +
 m4/gcc-inline.m4           |   19 +
 m4/gcc-ssp.m4              |   19 +
 m4/gcc-ssplib.m4           |   17 +
 m4/gcc-visibility.m4       |   19 +
 po/.gitignore              |    9 +
 po/Makefile.in             |  355 ----
 po/Makefile.in.in          |  355 ----
 po/remove-potcdate.sin     |   19 -
 scripts/Makefile.in        |  492 -----
 15 files changed, 120 insertions(+), 7142 deletions(-)
 delete mode 100755 acinclude.m4
 delete mode 100755 config.rpath
 delete mode 100644 lib/libalam/po/Makefile.in
 create mode 100644 m4/gcc-inline.m4
 create mode 100644 m4/gcc-ssp.m4
 create mode 100644 m4/gcc-ssplib.m4
 create mode 100644 m4/gcc-visibility.m4
 create mode 100644 po/.gitignore
 delete mode 100644 po/Makefile.in
 delete mode 100755 po/Makefile.in.in
 delete mode 100755 po/remove-potcdate.sin
 delete mode 100644 scripts/Makefile.in


hooks/post-receive
-- 
Project aurman at BerliOS


